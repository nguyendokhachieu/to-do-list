{"version":3,"sources":["components/AddForm.js","components/AddTaskButton.js","components/Header.js","components/Search.js","components/Sort.js","components/TaskItem.js","components/TaskTable.js","App.js","index.js"],"names":["AddForm","props","useState","inputText","setInputText","selectedLevel","setSelectedLevel","isEdited","setIsEdited","useEffect","editedTask","name","level","addFormClassName","isAddFormShowed","className","type","id","placeholder","onChange","e","target","value","Number","onClick","alert","document","getElementsByClassName","classList","add","task","Math","ceil","random","handleAddTask","handleToggleAddForm","_editedTask","handleOnEditedTask","remove","AddTaskButton","innerText","Header","Search","inputSearch","setInputSearch","handleSearch","onKeyPress","key","Sort","by","dir","sort","setSort","s","split","handleOnSortChange","TaskItem","_task","setTask","index","t","handleEdit","handleDelete","TaskTable","tasks","setTasks","filterLevel","setFilterLevel","taskList","newTaskList","searchString","forEach","indexOf","push","_newTaskList","orderBy","filter","taskItems","length","map","style","width","App","JSON","parse","localStorage","getItem","setItem","stringify","setTaskList","setSearchString","toggleIsAddFormShowed","setEditedTask","searchStr","splice","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.33f231f3.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function AddForm(props) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [selectedLevel, setSelectedLevel] = useState(0);\r\n  const [isEdited, setIsEdited] = useState(false);\r\n\r\n  function handleOnInputTextChange(e) {\r\n    setInputText(e.target.value);\r\n  }\r\n\r\n  function handleOnSelectedLevelChange(e) {\r\n    setSelectedLevel(Number(e.target.value));\r\n  }\r\n\r\n  function handleOnAddClick(e) {\r\n    let alert = document.getElementsByClassName(\"alert\");\r\n    if (!inputText) {\r\n      alert[0].classList.remove(\"display-none\");\r\n    } else {\r\n      alert[0].classList.add(\"display-none\");\r\n\r\n      if (isEdited === false) {\r\n        // add a new task\r\n        let task = {\r\n          id: Math.ceil(Math.random() * 69696969),\r\n          name: inputText,\r\n          level: selectedLevel,\r\n        };\r\n        props.handleAddTask(task);\r\n\r\n        setInputText(\"\");\r\n        setSelectedLevel(0);\r\n        props.handleToggleAddForm();\r\n      } else {\r\n        // edit a current task\r\n        setIsEdited(false);\r\n\r\n        let _editedTask = {\r\n          id: props.editedTask.id,\r\n          name: inputText,\r\n          level: selectedLevel,\r\n        };\r\n        props.handleOnEditedTask(_editedTask);\r\n\r\n        setInputText(\"\");\r\n        setSelectedLevel(0);\r\n        props.handleToggleAddForm();\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleOnCancelClick() {\r\n    props.handleToggleAddForm();\r\n    setIsEdited(false);\r\n    setInputText(\"\");\r\n    setSelectedLevel(0);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.editedTask.name !== \"\") {\r\n      setIsEdited(true);\r\n      setInputText(props.editedTask.name);\r\n      setSelectedLevel(props.editedTask.level);\r\n    } else {\r\n      setIsEdited(false);\r\n    }\r\n  }, [props.editedTask]);\r\n\r\n  let addFormClassName = props.isAddFormShowed ? \"\" : \"display-none\";\r\n\r\n  return (\r\n    <div className={`add-form ${addFormClassName}`}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"input\"\r\n        id=\"input\"\r\n        className=\"form-control\"\r\n        placeholder=\"Your task ...\"\r\n        onChange={handleOnInputTextChange}\r\n        value={inputText}\r\n      />\r\n      <select\r\n        value={selectedLevel}\r\n        name=\"select\"\r\n        id=\"select\"\r\n        className=\"form-control\"\r\n        onChange={handleOnSelectedLevelChange}\r\n      >\r\n        <option value={0}>Low</option>\r\n        <option value={1}>Medium</option>\r\n        <option value={2}>High</option>\r\n      </select>\r\n      <div className=\"add-form-btn\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-success\"\r\n          onClick={handleOnAddClick}\r\n        >\r\n          {isEdited ? \"Update this task\" : \"Add\"}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-default\"\r\n          onClick={handleOnCancelClick}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n      <div className=\"alert display-none\">Please fill your task ...</div>\r\n    </div>\r\n  );\r\n}\r\n","export default function AddTaskButton(props) {\r\n  function handleToggleAddForm() {\r\n    props.handleToggleAddForm();\r\n  }\r\n\r\n  let innerText = props.isAddFormShowed ? \"Close\" : \"Add a new task\";\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn btn-info btn-block\"\r\n      onClick={handleToggleAddForm}\r\n    >\r\n      {innerText}\r\n    </button>\r\n  );\r\n}\r\n","export default function Header() {\r\n  return (\r\n    <div className=\"page-header\">\r\n      <h1>To Do List</h1>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function Search(props) {\r\n  const [inputSearch, setInputSearch] = useState(\"\");\r\n\r\n  function handleInputSearchChange(e) {\r\n    setInputSearch(e.target.value);\r\n  }\r\n\r\n  function handleSearch() {\r\n    if (inputSearch) {\r\n      props.handleSearch(inputSearch);\r\n    }\r\n  }\r\n\r\n  function handleOnKeyPress(e) {\r\n    if (e.key === \"Enter\") {\r\n      handleSearch();\r\n    }\r\n  }\r\n\r\n  function handleClear() {\r\n    props.handleSearch(\"\");\r\n    setInputSearch(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n      <div className=\"input-group\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search for...\"\r\n          value={inputSearch}\r\n          onChange={handleInputSearchChange}\r\n          onKeyPress={handleOnKeyPress}\r\n        />\r\n        <span className=\"input-group-btn\">\r\n          <button className=\"btn btn-info\" type=\"button\" onClick={handleSearch}>\r\n            Search\r\n          </button>\r\n          <button\r\n            className=\"btn btn-warning\"\r\n            type=\"button\"\r\n            onClick={handleClear}\r\n          >\r\n            Clear\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function Sort(props) {\r\n  const [sort, setSort] = useState({ by: \"name\", dir: \"asc\" });\r\n\r\n  function handleOnChange(e) {\r\n    let s = {\r\n      by: e.target.value.split(\"-\")[0],\r\n      dir: e.target.value.split(\"-\")[1],\r\n    };\r\n\r\n    setSort(s);\r\n    props.handleOnSortChange(s);\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-xs-12 col-sm-12 col-md-3 col-lg-3\">\r\n      <div className=\"dropdown sort\">\r\n        <span className=\"sort-label label label-success label-medium\">\r\n          <span>\r\n            Sort by <i className=\"sort-type\">{sort.by}</i>\r\n          </span>\r\n          <span>\r\n            Sort from{\" \"}\r\n            <i className=\"sort-type\">\r\n              {sort.dir === \"asc\" && sort.by === \"name\"\r\n                ? \"a -> z\"\r\n                : sort.dir === \"desc\" && sort.by === \"name\"\r\n                ? \"z -> a\"\r\n                : sort.dir === \"asc\" && sort.by === \"level\"\r\n                ? \"low to high\"\r\n                : \"high to low\"}\r\n            </i>\r\n          </span>\r\n        </span>\r\n        <select\r\n          name=\"select\"\r\n          id=\"select\"\r\n          className=\"form-control select-sort\"\r\n          onChange={handleOnChange}\r\n        >\r\n          <option value=\"name-asc\">Name ASC</option>\r\n          <option value=\"name-desc\">Name DESC</option>\r\n          <option value=\"level-asc\">Level ASC</option>\r\n          <option value=\"level-desc\">Level DESC</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function TaskItem(props) {\r\n  const [_task, setTask] = useState({});\r\n\r\n  function handleOnDelete(t) {\r\n    props.handleDelete(t);\r\n  }\r\n\r\n  function handleOnEdit(t) {\r\n    props.handleEdit(t);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTask(props.task);\r\n  }, [props.task, _task]);\r\n\r\n  return (\r\n    <tr>\r\n      <td className=\"text-center\">{props.index}</td>\r\n      <td className=\"text-center\">{_task.name}</td>\r\n      <td className=\"text-center\">\r\n        <span\r\n          className={\r\n            _task.level === 0\r\n              ? \"level-low\"\r\n              : _task.level === 1\r\n              ? \"level-medium\"\r\n              : \"level-high\"\r\n          }\r\n        >\r\n          {_task.level === 0 ? \"Low\" : _task.level === 1 ? \"Medium\" : \"High\"}\r\n        </span>\r\n      </td>\r\n      <td className=\"text-center\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning\"\r\n          onClick={(e) => handleOnEdit(_task)}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-default\"\r\n          onClick={(e) => handleOnDelete(_task)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport { orderBy } from \"lodash\";\r\n\r\nexport default function TaskTable(props) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filterLevel, setFilterLevel] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    setTasks(props.taskList);\r\n  }, [props.taskList]);\r\n\r\n  let newTaskList = [];\r\n  if (props.searchString === \"\") {\r\n    newTaskList = tasks;\r\n  } else {\r\n    tasks.forEach((task) => {\r\n      if (task.name.indexOf(props.searchString) !== -1) {\r\n        newTaskList.push(task);\r\n      }\r\n    });\r\n  }\r\n\r\n  newTaskList = orderBy(newTaskList, [props.sort.by], [props.sort.dir]);\r\n\r\n  function handleDelete(t) {\r\n    props.handleDelete(t);\r\n  }\r\n\r\n  function handleEdit(t) {\r\n    props.handleEdit(t);\r\n  }\r\n\r\n  function handleOnFilterChange(e) {\r\n    setFilterLevel(Number(e.target.value));\r\n  }\r\n\r\n  let _newTaskList = newTaskList.filter((value) => {\r\n    if (filterLevel === -1) return true;\r\n    else {\r\n      return value.level === filterLevel;\r\n    }\r\n  });\r\n\r\n  let taskItems = null;\r\n  if (_newTaskList.length !== 0) {\r\n    taskItems = _newTaskList.map((task, index) => {\r\n      return (\r\n        <TaskItem\r\n          task={task}\r\n          index={index + 1}\r\n          key={index}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <table className=\"table table-hover \">\r\n      <thead>\r\n        <tr>\r\n          <th className=\"text-center\" style={{ width: \"10%\" }}>\r\n            #\r\n          </th>\r\n          <th className=\"text-center\">Task</th>\r\n          <th className=\"text-center\" style={{ width: \"20%\" }}>\r\n            Level\r\n          </th>\r\n          <th className=\"text-center\" style={{ width: \"20%\" }}>\r\n            Action\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th className=\"text-center\" style={{ width: \"10%\" }}></th>\r\n          <th className=\"text-center\"></th>\r\n          <th className=\"text-center\" style={{ width: \"20%\" }}>\r\n            <select\r\n              value={filterLevel}\r\n              name=\"filter\"\r\n              id=\"filter\"\r\n              className=\"form-control\"\r\n              onChange={handleOnFilterChange}\r\n            >\r\n              <option value={-1}>All</option>\r\n              <option value={0}>Low</option>\r\n              <option value={1}>Medium</option>\r\n              <option value={2}>High</option>\r\n            </select>\r\n          </th>\r\n          <th className=\"text-center\" style={{ width: \"20%\" }}></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{taskItems}</tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport AddForm from \"./components/AddForm\";\nimport AddTaskButton from \"./components/AddTaskButton\";\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\nimport Sort from \"./components/Sort\";\nimport TaskTable from \"./components/TaskTable\";\nimport \"./css/bootstrap.min.css\";\nimport \"./css/style.css\";\n\nfunction App() {\n  if (!JSON.parse(localStorage.getItem(\"localStorageTasks\"))) {\n    localStorage.setItem(\"localStorageTasks\", JSON.stringify([]));\n  }\n  const [taskList, setTaskList] = useState(\n    JSON.parse(localStorage.getItem(\"localStorageTasks\"))\n  );\n  const [searchString, setSearchString] = useState(\"\");\n  const [isAddFormShowed, toggleIsAddFormShowed] = useState(false);\n  const [editedTask, setEditedTask] = useState({\n    id: 0,\n    name: \"\",\n    level: 0,\n  });\n  const [sort, setSort] = useState({\n    by: \"name\",\n    dir: \"asc\",\n  });\n\n  function handleAddTask(task) {\n    taskList.push(task);\n    setTaskList([...taskList]);\n    localStorage.setItem(\"localStorageTasks\", JSON.stringify([...taskList]));\n  }\n\n  function handleSearch(searchStr) {\n    setSearchString(searchStr);\n  }\n\n  function handleOnSortChange(sort) {\n    setSort(sort);\n  }\n\n  function handleToggleAddForm() {\n    toggleIsAddFormShowed(!isAddFormShowed);\n  }\n\n  function handleDelete(t) {\n    taskList.forEach((task, index) => {\n      if (task.id === t.id) {\n        taskList.splice(index, 1);\n      }\n    });\n    setTaskList([...taskList]);\n    localStorage.setItem(\"localStorageTasks\", JSON.stringify([...taskList]));\n  }\n\n  function handleEdit(t) {\n    setEditedTask(t);\n    toggleIsAddFormShowed(true);\n  }\n\n  function handleOnEditedTask(_editedTask) {\n    setEditedTask(_editedTask);\n    taskList.forEach((task) => {\n      if (task.id === _editedTask.id) {\n        task.name = _editedTask.name;\n        task.level = _editedTask.level;\n\n        setTaskList([...taskList]);\n        localStorage.setItem(\n          \"localStorageTasks\",\n          JSON.stringify([...taskList])\n        );\n      }\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <div className=\"row tools\">\n        <Search handleSearch={handleSearch} />\n        <Sort handleOnSortChange={handleOnSortChange} />\n        <div className=\"col-xs-12 col-sm-12 col-md-5 col-lg-5\">\n          <AddTaskButton\n            handleToggleAddForm={handleToggleAddForm}\n            isAddFormShowed={isAddFormShowed}\n          />\n          <AddForm\n            handleAddTask={handleAddTask}\n            editedTask={editedTask}\n            handleOnEditedTask={handleOnEditedTask}\n            handleToggleAddForm={handleToggleAddForm}\n            isAddFormShowed={isAddFormShowed}\n          />\n        </div>\n      </div>\n      <div className=\"panel panel-success\">\n        <div className=\"panel-heading\">List Task</div>\n        <TaskTable\n          taskList={taskList}\n          searchString={searchString}\n          sort={sort}\n          handleDelete={handleDelete}\n          handleEdit={handleEdit}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}